<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-13T18:25:57Z" name="Regression Cars Search" finished-at="2020-04-13T18:26:51Z" duration-ms="54618">
    <groups>
    </groups>
    <test started-at="2020-04-13T18:25:57Z" name="Audi test" finished-at="2020-04-13T18:26:44Z" duration-ms="47162">
      <class name="test_olx.TestDemo">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test_olx.TestDemo@4387b79e]" started-at="2020-04-13T20:25:57Z" name="beforeClass" finished-at="2020-04-13T20:26:17Z" duration-ms="20911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test1(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test_olx.TestDemo@4387b79e]" started-at="2020-04-13T20:26:17Z" name="test1" finished-at="2020-04-13T20:26:42Z" duration-ms="24660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Audi test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Warszawa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Audi]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test_olx.TestDemo@4387b79e]" started-at="2020-04-13T20:26:42Z" name="afterClass" finished-at="2020-04-13T20:26:44Z" duration-ms="1565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test_olx.TestDemo -->
    </test> <!-- Audi test -->
    <test started-at="2020-04-13T18:25:57Z" name="BMW Test" finished-at="2020-04-13T18:26:48Z" duration-ms="51287">
      <class name="test_olx.TestDemo">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test_olx.TestDemo@657c8ad9]" started-at="2020-04-13T20:25:57Z" name="beforeClass" finished-at="2020-04-13T20:26:18Z" duration-ms="21471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test1(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test_olx.TestDemo@657c8ad9]" started-at="2020-04-13T20:26:18Z" name="test1" finished-at="2020-04-13T20:26:47Z" duration-ms="28922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BMW Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Warszawa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BMW]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Seria 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test_olx.TestDemo@657c8ad9]" started-at="2020-04-13T20:26:47Z" name="afterClass" finished-at="2020-04-13T20:26:48Z" duration-ms="876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test_olx.TestDemo -->
    </test> <!-- BMW Test -->
    <test started-at="2020-04-13T18:25:57Z" name="Fiat test" finished-at="2020-04-13T18:26:51Z" duration-ms="54618">
      <class name="test_olx.TestDemo">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test_olx.TestDemo@add0edd]" started-at="2020-04-13T20:25:57Z" name="beforeClass" finished-at="2020-04-13T20:26:18Z" duration-ms="21814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test1(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test_olx.TestDemo@add0edd]" started-at="2020-04-13T20:26:18Z" name="test1" finished-at="2020-04-13T20:26:50Z" duration-ms="32006" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fiat test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Warszawa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fjat]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bravo]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at test_olx.Search.carBrand(Search.java:90)
	at test_olx.TestDemo.test1(TestDemo.java:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test_olx.TestDemo@add0edd]" started-at="2020-04-13T20:26:50Z" name="afterClass" finished-at="2020-04-13T20:26:51Z" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test_olx.TestDemo -->
    </test> <!-- Fiat test -->
  </suite> <!-- Regression Cars Search -->
</testng-results>
